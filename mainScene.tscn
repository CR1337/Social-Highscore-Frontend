[gd_scene load_steps=10 format=2]

[ext_resource path="res://player.tscn" type="PackedScene" id=1]
[ext_resource path="res://InputUI.tscn" type="PackedScene" id=2]
[ext_resource path="res://DemoFaceScene.tscn" type="PackedScene" id=3]
[ext_resource path="res://TestArea.tscn" type="PackedScene" id=4]
[ext_resource path="res://AreaManager.gd" type="Script" id=5]
[ext_resource path="res://TestArea2.tscn" type="PackedScene" id=6]
[ext_resource path="res://ShaderRect.gd" type="Script" id=7]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float opacity = 0.0;

void fragment() {
	COLOR = vec4(0.0, 0.0, 0.0, opacity);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/opacity = 0.0

[node name="mainScene" type="Node2D"]

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2( -2, -2 )
current = true

[node name="TestArea" parent="." instance=ExtResource( 4 )]
position = Vector2( -385.536, -682.877 )
leaveLeftAreaPath = NodePath("../TestArea2")
leaveLeftPlayerPosition = Vector2( 5.5, -3 )

[node name="AreaManager" type="Node" parent="."]
script = ExtResource( 5 )
playerPath = NodePath("../player")
startArea = NodePath("../TestArea")
shaderRectPath = NodePath("../ShaderRect")

[node name="TestArea2" parent="." instance=ExtResource( 6 )]
position = Vector2( -1179.73, -685.778 )
leaveRightAreaPath = NodePath("../TestArea")
leaveRightPlayerPosition = Vector2( -5.5, -3 )

[node name="player" parent="." instance=ExtResource( 1 )]
position = Vector2( -4.26776, -141.773 )
speed = 4

[node name="InputUI" parent="." instance=ExtResource( 2 )]
position = Vector2( 0, 0 )

[node name="DemoFaceScene" parent="." instance=ExtResource( 3 )]
position = Vector2( 1122.78, 25.3451 )

[node name="ShaderRect" type="ColorRect" parent="."]
material = SubResource( 2 )
margin_left = -386.0
margin_top = -686.0
margin_right = 382.0
margin_bottom = 338.0
color = Color( 0, 0, 0, 1 )
script = ExtResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}

[connection signal="down_pressed" from="InputUI" to="player" method="_on_InputUI_down_pressed"]
[connection signal="down_released" from="InputUI" to="player" method="_on_InputUI_down_released"]
[connection signal="left_pressed" from="InputUI" to="player" method="_on_InputUI_left_pressed"]
[connection signal="left_released" from="InputUI" to="player" method="_on_InputUI_left_released"]
[connection signal="right_pressed" from="InputUI" to="player" method="_on_InputUI_right_pressed"]
[connection signal="right_released" from="InputUI" to="player" method="_on_InputUI_right_released"]
[connection signal="up_pressed" from="InputUI" to="player" method="_on_InputUI_up_pressed"]
[connection signal="up_released" from="InputUI" to="player" method="_on_InputUI_up_released"]
